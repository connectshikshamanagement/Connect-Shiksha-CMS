const mongoose = require('mongoose');
const { getBudgetWarnings, getProjectFinancialSummary } = require('../utils/budgetTracking');

async function testBudgetWarnings() {
  try {
    console.log('üß™ Testing Budget Warnings API');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    
    // Connect to MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/connect-shiksha-crm');
    console.log('‚úÖ MongoDB Connected');

    // Test budget warnings
    console.log('\nüìä Getting budget warnings...');
    const warnings = await getBudgetWarnings();
    
    console.log(`\nüìã Found ${warnings.length} projects with budgets:`);
    
    warnings.forEach((warning, index) => {
      console.log(`\n${index + 1}. ${warning.projectTitle}`);
      console.log(`   Budget: ‚Çπ${warning.budget.toLocaleString()}`);
      console.log(`   Expenses: ‚Çπ${warning.totalExpenses.toLocaleString()}`);
      console.log(`   Income: ‚Çπ${warning.totalIncome.toLocaleString()}`);
      console.log(`   Deal Amount: ‚Çπ${warning.dealAmount.toLocaleString()}`);
      console.log(`   Budget Utilization: ${warning.budgetUtilization}%`);
      console.log(`   Deal Collection: ${warning.dealCollection}%`);
      console.log(`   Warning Level: ${warning.warningLevel}`);
      if (warning.message) {
        console.log(`   Message: ${warning.message}`);
      }
    });

    // Test project financial summary for first project
    if (warnings.length > 0) {
      console.log(`\nüîç Testing project financial summary for: ${warnings[0].projectTitle}`);
      const summary = await getProjectFinancialSummary(warnings[0].projectId);
      
      if (summary) {
        console.log('\nüìä Project Financial Summary:');
        console.log(`   Project: ${summary.project.title}`);
        console.log(`   Budget: ‚Çπ${summary.project.budget.toLocaleString()}`);
        console.log(`   Deal Amount: ‚Çπ${summary.project.totalDealAmount.toLocaleString()}`);
        console.log(`   Total Income: ‚Çπ${summary.financials.totalIncome.toLocaleString()}`);
        console.log(`   Total Expenses: ‚Çπ${summary.financials.totalExpenses.toLocaleString()}`);
        console.log(`   Profit: ‚Çπ${summary.financials.profit.toLocaleString()}`);
        console.log(`   Budget Utilization: ${summary.financials.budgetUtilization}%`);
        console.log(`   Deal Collection: ${summary.financials.dealCollection}%`);
        console.log(`   Budget Exceeded: ${summary.warnings.budgetExceeded}`);
        console.log(`   Budget Warning: ${summary.warnings.budgetWarning}`);
        console.log(`   Deal Complete: ${summary.warnings.dealComplete}`);
      }
    }

    console.log('\n‚úÖ Budget warnings test completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Error during test:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå MongoDB Disconnected');
  }
}

testBudgetWarnings();
